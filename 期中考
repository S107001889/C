修正底下程式錯誤,完成程式計算3到37的偶數和
A:
#include <stdio.h>
main() 
{
    int i = 1;
    int total = 0;
    for ( i = 3; i <= 37; i++ )
    {  
       if ( (i % 2) != 0 ) continue;
       total += i;
    }
    printf("總和為: %d\n", total);
    getchar();
}

1+5+9…+401的總和程式設計技術
A:
For:
#include <stdlib.h> 
#include <stdio.h>
main() 
{
	int i=1,total=0;
    for(i=1;i<=401;i+=4)
    {  
	  total+=i;
	} 
    printf("%d",total);
	return 0;  
}

while:
#include <stdlib.h> 
#include <stdio.h>
main() 
{
   int i=1,total=0;
   while(i<=401)
   {
   	total += i;	
   	i+=4;
   } 
   printf("%d",total);
}

do while:
#include <stdlib.h> 
#include <stdio.h>
main() 
{
   int i=1,total=0;
   do
   {
      total+=i;
      i+=4;
    }
   while(i<=401);
   printf("%d",total);
}

用Recursion方式撰寫1+5+9+…+401的總和
A:
#include <stdio.h>
#include <stdlib.h>
int add(int,int);
int main()
{
  int x,y=0;
  do
  {
    printf("請輸入最小值:\n");
    scanf("%d",&x);
  }
   while(x<=0);
   
   do
   {
   	 printf("請輸入最大值:\n");
     scanf("%d",&y);
   }
   while(y<=0);
   printf("%d",add(x,y)); 
   return 0; 	
 } 
 
int add(int x,int y)
{
  int total;
  if(y<=1)
     return 1;
  else total=total+(y+add(x,y-4));
  
  return total;
}

函數設計題:完成底下計算factorial階乘函數fac(n):n!
fac(5)==5*4*4*3*1==5!=120
A:
For:
#include <stdio.h>
#include <stdlib.h>

int fac(int);
int main()
{
	int x;
    do
   {
   	 printf("請輸入:\n");
     scanf("%d",&x);
   }
   while(x<=0);
   fac(x); 
   return 0; 	
 }  
  
 int fac(int x)
 {
    int i=1;
    int a=x;
	int b=x;
 	for(i=1;i<x;i++)
 	{
 	 a*=(b-i);
	 }
 	printf("%d",a);
 }

while:
#include <stdio.h>
#include <stdlib.h>

int fac(int);
int main()
{
	int x;
    do
   {
   	 printf("請輸入:\n");
     scanf("%d",&x);
   }
   while(x<=0);
   fac(x); 
   
   
   return 0; 	
 }  
 
 int fac(int x)
{
	int i=1;
	int a=x,b=x;
	while(i<x)
	{
	 a*=b-i;
	 i++;
     }
     printf("%d",a);
}

do while:
#include <stdio.h>
#include <stdlib.h>

int fac(int);
int main()
{
	int x;
    do
   {
   	 printf("請輸入:\n");
     scanf("%d",&x);
   }
   while(x<=0);
   fac(x); 
   
   
   return 0; 	
 }  
 
 int fac(int x)
{
 int i=1;
 int a=x,b=x;
    do
   {
 	a*=b-i;
 	i++; 	
   }
   while(i<x);
   printf("%d",a);
 
}

Recursion:
#include <stdio.h>
#include <stdlib.h>

int fac(int);
int main()
{
	int x;
    do
   {
   	 printf("請輸入:\n");
     scanf("%d",&x);
   }
   while(x<=0);
   fac(x); 
   
   printf("%d",fac(x));
   return 0; 	
 }  
 
int fac(int x)
{
  int i=1;
  int a=x,b=x;
  if(x<=1)  
    return 1;
    
    else x*=(fac(x-1));
}

次方函數:

#include <stdio.h>
#include <stdlib.h>

double power_for(double, int);	
double power_while(double, int);
double power_dowhile(double, int);
double power_r(double, int);

int main(void)
{
   double x;		
   int n;		

   printf("請輸入你要計算的內容:");	
   scanf("%lf,%d",&x,&n); 	

   printf("這是使用for loop完成的結果");
   printf("%lf的%dΩ次方是%lf\n",x,n,power_for(x,n)); 

   system("pause");
   return 0;
}

double power_for(double base, int n) 
{
   int i;
   double pow=1.0;
   for(i=1;i<=n;i++)		
      pow=pow*base;
   return pow;
}

double power_while(double base, int n) 
{
	int i=1;
	double pow=1.0;
	while(i<=n)
	{
	 pow=pow*base;
	 i++;
    }
	return pow;
}

double power_dowhile(double base, int n)
{
	int i=1;
	double pow=1.0;
	do
	{
	 pow=pow*base;
	 i++;
    }
    while(i<=n);
}

double power_r(double base, int n)
{
  double pow=1;
  if(n<=0)
	return 1;
	
	else pow=(pow*base)*power_r(base,n-1);
   
 return pow;
}

費式數列函數
A:
for:
#include <stdio.h>
#include <stdlib.h>

int fib(int);
int main()
{
    int x;
    do
   {
   	 printf("請輸入:");
     scanf("%d",&x);
   }
   while(x<=0);
     
   printf("%d",fib(x));
   return 0; 	
 }  
 
 int fib(int x)
 {
   int i=1,t=1,r=1,total=0;
   if(x==1 || x==2)
        total+=1;
	
    else for(i=3;i<=x;i++)
        {
	   total=t+r;
	   t=r;
	   r=total;
	}
   }
   return total;
 }
 
while:
#include <stdio.h>
#include <stdlib.h>

int fib(int);
int main()
{
    int x;
    do
   {
   	 printf("請輸入:");
     scanf("%d",&x);
   }
   while(x<=0);
     
   printf("%d",fib(x));
   return 0; 	
 }  
 
 int fib(int x)
 {
   int i=3,t=1,r=1,total=0;
   if(x==1 || x==2)
      total+=1;
     else 
      while(i<=x)
     {
      total=t+r;
      t=r;
      r=total;
      i++;
      }

   return total;
 }
 
 do while:
#include <stdio.h>
#include <stdlib.h>
 
 int fib(int);
 int main()
 {
  int x;
  do
   {
   printf("請輸入:");
   scanf("%d",&x);
   } while(x<=0);
   
  printf("%d",fib(x));
  return 0;
 }
 
 int fib(int x)
 {
 int i=3,t=1,r=1,total=0;
  do
   {if (x==1 || x==2)
       total+=1;
     else do
     {
     total=t+r;
     t=r;
     r=total;
     i++;
     }while(i<=x);
    return total;
 }
 
 Recursion:
  #include <stdio.h>
 #include <stdlib.h>
 
 int fib(int);
 int main()
 {
  int x;
  do
   {
   printf("請輸入:");
   scanf("%d",&x);
   } while(x<=0);
  
  printf("%d",fib(x));
  return 0;
 }
 
 int fib(int x)
 {
 int i=1,total=0;
  if (x==1 || x==2)
       total+=1;
       
   else total=total+(fib(x-1)+fib(x-2));
            
    return total;
 }
